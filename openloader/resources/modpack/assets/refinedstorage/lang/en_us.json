{
    "itemGroup.refinedstorage.general": "Refined Storage",
    "block.refinedstorage.cable": "Cable",
    "block.refinedstorage.quartz_enriched_iron_block": "Block of Quartz Enriched Iron",
    "block.refinedstorage.disk_drive": "Disk Drive",
    "block.refinedstorage.machine_casing": "Machine Casing",
    "block.refinedstorage.grid": "Grid",
    "block.refinedstorage.controller": "Controller",
    "block.refinedstorage.creative_controller": "Creative Controller",
    "item.refinedstorage.quartz_enriched_iron": "Quartz Enriched Iron",
    "item.refinedstorage.processor_binding": "Processor Binding",
    "item.refinedstorage.silicon": "Silicon",
    "item.refinedstorage.raw_basic_processor": "Raw Basic Processor",
    "item.refinedstorage.raw_improved_processor": "Raw Improved Processor",
    "item.refinedstorage.raw_advanced_processor": "Raw Advanced Processor",
    "item.refinedstorage.basic_processor": "Basic Processor",
    "item.refinedstorage.improved_processor": "Improved Processor",
    "item.refinedstorage.advanced_processor": "Advanced Processor",
    "item.refinedstorage.1k_storage_part": "1k Storage Part",
    "item.refinedstorage.4k_storage_part": "4k Storage Part",
    "item.refinedstorage.16k_storage_part": "16k Storage Part",
    "item.refinedstorage.64k_storage_part": "64k Storage Part",
    "item.refinedstorage.1k_storage_disk": "1k Storage Disk",
    "item.refinedstorage.4k_storage_disk": "4k Storage Disk",
    "item.refinedstorage.16k_storage_disk": "16k Storage Disk",
    "item.refinedstorage.64k_storage_disk": "64k Storage Disk",
    "item.refinedstorage.creative_storage_disk": "Creative Storage Disk",
    "item.refinedstorage.storage_housing": "Storage Housing",
    "item.refinedstorage.construction_core": "Construction Core",
    "item.refinedstorage.destruction_core": "Destruction Core",
    "misc.refinedstorage.stored": "Stored: %s",
    "misc.refinedstorage.stored_with_capacity": "Stored: %s / %s",
    "misc.refinedstorage.full": "%d%% full",
    "misc.refinedstorage.total": "%d total",
    "misc.refinedstorage.last_modified.just_now": "Last modified just now by %s",
    "misc.refinedstorage.last_modified.second": "Last modified %d second ago by %s",
    "misc.refinedstorage.last_modified.seconds": "Last modified %d seconds ago by %s",
    "misc.refinedstorage.last_modified.minute": "Last modified %d minute ago by %s",
    "misc.refinedstorage.last_modified.minutes": "Last modified %d minutes ago by %s",
    "misc.refinedstorage.last_modified.hour": "Last modified %d hour ago by %s",
    "misc.refinedstorage.last_modified.hours": "Last modified %d hours ago by %s",
    "misc.refinedstorage.last_modified.day": "Last modified %d day ago by %s",
    "misc.refinedstorage.last_modified.days": "Last modified %d days ago by %s",
    "misc.refinedstorage.last_modified.week": "Last modified %d week ago by %s",
    "misc.refinedstorage.last_modified.weeks": "Last modified %d weeks ago by %s",
    "misc.refinedstorage.last_modified.year": "Last modified %d year ago by %s",
    "misc.refinedstorage.last_modified.years": "Last modified %d years ago by %s",
    "key.refinedstorage.focus_search_bar": "Focus Search Bar",
    "category.refinedstorage.key_bindings": "Refined Storage",
    "text.autoconfig.refinedstorage.title": "Refined Storage",
    "text.autoconfig.refinedstorage.option.grid": "Grid",
    "text.autoconfig.refinedstorage.option.grid.largeFont": "Large font",
    "text.autoconfig.refinedstorage.option.grid.maxRowsStretch": "Maximum amount of rows when stretched",
    "text.autoconfig.refinedstorage.option.grid.preventSortingWhileShiftIsDown": "Prevent sorting while shift is down",
    "text.autoconfig.refinedstorage.option.grid.detailedTooltip": "Detailed tooltip",
    "text.autoconfig.refinedstorage.option.grid.rememberSearchQuery": "Remember search query",
    "text.autoconfig.refinedstorage.option.grid.energyUsage": "Energy usage",
    "text.autoconfig.refinedstorage.option.grid.smoothScrolling": "Smooth scrollling",
    "text.autoconfig.refinedstorage.option.controller": "Controller",
    "text.autoconfig.refinedstorage.option.controller.capacity": "Energy capacity",
    "text.autoconfig.refinedstorage.option.cable": "Cable",
    "text.autoconfig.refinedstorage.option.cable.energyUsage": "Energy usage",
    "text.autoconfig.refinedstorage.option.diskDrive": "Disk Drive",
    "text.autoconfig.refinedstorage.option.diskDrive.energyUsage": "Energy usage",
    "text.autoconfig.refinedstorage.option.diskDrive.energyUsagePerDisk": "Energy usage per disk",
    "book.refinedstorage.landing_text": "Refined Storage is a mass storage mod for Minecraft that offers the player a network-based storage system, allowing them to store items and fluids on a massively expandable device network.",
    "book.refinedstorage.category.grids": "Grids",
    "book.refinedstorage.category.grids.description": "The $(h)Grid$() allows access to items and fluids in your storage network.",
    "book.refinedstorage.entry.grids.about.title": "About",
    "book.refinedstorage.entry.grids.about.line0": "The $(h)Grid$() is the block that you'll use the most when interacting with your storage network.$(p)It provides a view with all the items and fluids in a storage network where you can insert and extract resources.$(p)You can color a $(h)Grid$() by using a dye on the block. You can also use one of the coloring recipes to color it.",
    "book.refinedstorage.entry.grids.controls.title": "Controls",
    "book.refinedstorage.entry.grids.controls.line0": "Mastering the various controls that the $(h)Grid$() provides is essential to use your storage network efficiently.$(p)Using $(h)LEFT CLICK$() extracts an entire stack, whereas using $(h)RIGHT CLICK$() extracts half of a stack.$(p)Pressing $(h)SHIFT$() while doing this will push the resources to the player inventory instead of the cursor.",
    "book.refinedstorage.entry.grids.controls.line1": "Use $(h)SHIFT + MOUSE SCROLL$() to transfer items between your inventory and the Grid.$(p)Use $(h)CTRL + MOUSE SCROLL DOWN$() on an item in the $(h)Grid$() to transfer items to your mouse cursor.",
    "book.refinedstorage.entry.grids.controls.line2": "When it comes to interacting with the search box, you can use $(h)TAB$() to focus the search bar when autoselected mode is turned off.$(p)Using $(h)RIGHT CLICK$() on the search box will clear the search query.",
    "book.refinedstorage.entry.grids.sorting.title": "Sorting",
    "book.refinedstorage.entry.grids.sorting.line0": "The order in which resources are visible is configurable for every $(h)Grid$(). You can use ordering by name, by quantity, by ID and by last modified.$(p)The sorting direction can also be chosen, either ascending or descending.$(p)By default, the $(h)Grid$() is ordering by quantity, descending.",
    "book.refinedstorage.entry.grids.search_box.title": "Search Box",
    "book.refinedstorage.entry.grids.search_box.line0": "The search box has a few different modes.$(p)The default one is $(h)Normal$(), which allows the player to click on the search box and type in a search query. The player may also use $(h)TAB$() to focus the search box. The search box can be deactivated again by clicking outside the box or by pressing the $(h)TAB$() key.",
    "book.refinedstorage.entry.grids.search_box.line1": "There is also $(h)Normal (autoselected)$() which is similar to $(h)Normal$(), but automatically applies focus when the $(h)Grid$() is opened.$(p)In this mode, the search box can never lose focus, even if the player clicks out of the box or presses $(h)TAB$().",
    "book.refinedstorage.entry.grids.search_box.line2": "When Roughly Enough Items is installed, search box modes $(h)JEI$() and $(h)JEI (autoselected)$() are available as well.$(p)They behave the same way as the other search box modes, but synchronize changes from the $(h)Grid$() search box to the JEI search box.",
    "book.refinedstorage.entry.grids.search_box.line3": "$(h)JEI (two-way)$() and $(h)JEI (two-way autoselected)$() modes will ensure that changes from the JEI search box are synchronized to the $(h)Grid$() search box, and also changes from the $(h)Grid$() search box to the JEI search box.",
    "book.refinedstorage.entry.grids.search_box.line4": "When the search box is focused, the player may use the $(h)UP$() and $(h)DOWN$() keys to scroll through the history of the search box.$(p)Losing focus or pressing $(h)ENTER$() in the search box will save the search query in the history.$(p)Even if the $(h)Grid$() is closed and reopened, the history remains.",
    "book.refinedstorage.entry.grids.search_box.line5": "By default, when opening and closing the $(h)Grid$(), the search query is cleared. You may retrieve the previous search query by using the $(h)UP$() arrow key.$(p)If the last search query needs to be present without pressing $(h)UP$(), then the player can modify the $(h)grid.rememberSearchQuery$() configuration option.",
    "book.refinedstorage.entry.grids.sizing.title": "Sizing",
    "book.refinedstorage.entry.grids.sizing.line0": "By default, the $(h)Grid$() uses all the available screen space. This is because $(h)Stretched$() mode is chosen. There are a few additional modes available: $(h)Small$() (3 rows), $(h)Medium$() (5 rows), $(h)Large$() (8 rows) and $(h)Extra large$() (12 rows).$(p)When using the $(h)Stretched$() size, the $(h)Grid$() will use all available screen space. This can be limited with the $(h)grid.maxRowsStretch$() config option.",
    "book.refinedstorage.entry.grids.searching.title": "Searching",
    "book.refinedstorage.entry.grids.searching.line0": "The $(h)Grid$() has a powerful search query system. You can chain various expressions with a space. The result of all those expressions are $(h)AND'ed$(). You can use a term filter like $(h)dirt$() to search for items that contain \"dirt\" in the name. If you search for $(h)iron ore$(), then the $(h)Grid$() will have 2 filters: one for items that contain $(h)iron$() and one for items that contain $(h)ore$().",
    "book.refinedstorage.entry.grids.searching.line1": "Chaining expressions with a space implicitly uses $(h)AND$().$(p)It's also possible to use an $(h)OR$() filter with $(h)||$().$(p)Using parenthesis is allowed as well to explicitly state order of operations, like $(h)(iron ore) || dirt$() will return items that contain iron and ore, or dirt.",
    "book.refinedstorage.entry.grids.searching.line2": "Various unary operators are available as well. You can use the $(h)NOT$() unary operator with $(h)!$(). For example: $(h)!dirt$() returns all items that aren't dirt.$(p)You can use mod filtering as well with $(h)@$(). For example: $(h)@refined$() will return items from Refined Storage.$(p)You can use $(h)$$() to have item or fluid tag filtering.",
    "book.refinedstorage.entry.grids.searching.line3": "You can filter on the item or fluid quantity as well with the $(h)>$(), $(h)>=$(), $(h)<$(), $(h)<=$() and $(h)=$() unary operators.$(p)For example: $(h)>=2$() will return items that you have at least 2 of.$(p)$(h)>=2 <5$() will return items that you have at least 2 of, but maximum 4 of.",
    "book.refinedstorage.entry.grids.searching.line4": "It's possible to do fairly complex queries like $(h)(@refined || @applied) >10 silicon$() which returns items from Refined Storage or Applied Energistics, which have \"silicon\" in the name and that you have at least 10 of.",
    "book.refinedstorage.category.disks_and_drives": "Disks and Drives",
    "book.refinedstorage.category.disks_and_drives.description": "Refined Storage adds the ability to store your precious items on storage disks that live in a Disk Drive.",
    "book.refinedstorage.entry.disks_and_drives.disks.title": "Disks",
    "book.refinedstorage.entry.disks_and_drives.disks.line0": "Storage disks exist in different tiers. Depending on the tier, they have a different capacity.",
    "book.refinedstorage.entry.disks_and_drives.disks.line1": "There is a uncraftable $(h)Creative Storage Disk$() as well, which is a disk that has infinite capacity.",
    "book.refinedstorage.entry.disks_and_drives.storage_housing.title": "Storage Housing",
    "book.refinedstorage.entry.disks_and_drives.storage_housing.line0": "Each $(h)Storage Disk$() has its own recipe, but you can combine a $(h)Storage Housing$() and a $(h)Storage Part$() as well.$(p)If a $(h)Storage Disk$() is empty you can disassemble it and get your $(h)Storage Part$() and $(h)Storage Housing$() back by right clicking and sneaking while holding the $(h)Storage Disk$().",
    "book.refinedstorage.entry.disks_and_drives.disk_drive.title": "Disk Drive",
    "book.refinedstorage.entry.disks_and_drives.disk_drive.line0": "If you want to give your storage network access to your $(h)Storage Disks$(), you have to place them in a $(h)Disk Drive$() that is connected to the network. Each $(h)Disk Drive$() has space for 8 disks.$(p)You can configure the redstone mode on the $(h)Disk Drive$(). If the $(h)Disk Drive$() is disabled due to the redstone mode, the storage won't be available to the network.",
    "book.refinedstorage.entry.disks_and_drives.disk_drive.line1": "You can configure filter(s) that can be set to act like an allowlist or a blocklist. The filter won't alter the contents of existing disks in the $(h)Disk Drive$(), and is not enforced for extract operations. It's only enforced for insert operations.$(p)Exact mode can be configured which determines if the filtering is NBT tag sensitive or not.",
    "book.refinedstorage.entry.disks_and_drives.disk_drive.line2": "The access mode of all the disks in the $(h)Disk Drive$() can be configured as well and is insert-extract by default.$(p)When you configure it to insert-only mode, you can only insert items this storage. The items will still be visible in the $(h)Grid$(), but you won't be able to extract them.$(p)When you configure it to extract-only mode, you can extract but not insert items.",
    "book.refinedstorage.entry.disks_and_drives.disk_drive.line3": "You can configure a priority for all the $(h)Storage Disks$() in the $(h)Disk Drive$(). This will determine the order in which the network inserts or extracts items.$(p)For all insert and extract operations, the network will take the highest priority first.$(p)If you desire, you can set a negative priority as well.",
    "book.refinedstorage.category.networking": "Networking",
    "book.refinedstorage.category.networking.description": "Building networks is an essential part of Refined Storage.",
    "book.refinedstorage.entry.networking.controllers.title": "Controllers",
    "book.refinedstorage.entry.networking.controllers.line0": "A network requires energy to run. In order to provide the network with energy, you can connect one or multiple $(h)Controllers$(). It is perfectly possible that you need to use multiple $(h)Controllers$() to satisfy the energy requirements.$(p)A $(h)Controller$() isn't strictly required in a network: you can build ad-hoc networks, but they won't function because there's no energy.",
    "book.refinedstorage.entry.networking.controllers.line1": "The energy is extracted per tick. The amount of energy that is extracted depends on the amount of devices, and which devices. Every device type consumes another amount of energy.$(p)You can configure the redstone mode on the $(h)Controller$(). If the $(h)Controller$() is disabled due to the redstone mode, you can still insert energy into it but the network won't use it and the network will act like the $(h)Controller$() doesn't exist.",
    "book.refinedstorage.entry.networking.controllers.line2": "When a $(h)Controller$() is broken, it will maintain it's energy level.$(p)There is a uncraftable $(h)Creative Controller$() available that provides the network with infinite energy.$(p)You can color a $(h)Controller$() by using a dye on the block. You can also use one of the coloring recipes to color it.",
    "book.refinedstorage.entry.networking.cables.title": "Cable",
    "book.refinedstorage.entry.networking.cables.line0": "You can use $(h)Cable$() to connect all the various network devices together.$(p)Using $(h)Cable$() isn't mandatory, if you place the network devices next to each other in any direction, a connection is formed as well."
}